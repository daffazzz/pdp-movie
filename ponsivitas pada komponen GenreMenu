[1mdiff --git a/app/components/GenreMenu.tsx b/app/components/GenreMenu.tsx[m
[1mindex 00abab4..8719409 100644[m
[1m--- a/app/components/GenreMenu.tsx[m
[1m+++ b/app/components/GenreMenu.tsx[m
[36m@@ -17,9 +17,34 @@[m [minterface GenreMenuProps {[m
 const GenreMenu: React.FC<GenreMenuProps> = ({ genres, onSelectGenre, selectedGenre }) => {[m
   const [isOpen, setIsOpen] = useState(false);[m
   const menuRef = useRef<HTMLDivElement>(null);[m
[32m+[m[32m  const [isMobile, setIsMobile] = useState(false);[m
[32m+[m[32m  const [isTablet, setIsTablet] = useState(false);[m
 [m
[31m-  // Group genres into columns (4 columns untuk lebih padat)[m
[31m-  const columnCount = 4;[m
[32m+[m[32m  // Check if screen is mobile or tablet size[m
[32m+[m[32m  useEffect(() => {[m
[32m+[m[32m    const checkScreenSize = () => {[m
[32m+[m[32m      setIsMobile(window.innerWidth < 640);[m
[32m+[m[32m      setIsTablet(window.innerWidth >= 640 && window.innerWidth < 1024);[m
[32m+[m[32m    };[m
[32m+[m[41m    [m
[32m+[m[32m    // Initial check[m
[32m+[m[32m    checkScreenSize();[m
[32m+[m[41m    [m
[32m+[m[32m    // Add event listener for window resize[m
[32m+[m[32m    window.addEventListener('resize', checkScreenSize);[m
[32m+[m[41m    [m
[32m+[m[32m    // Cleanup[m
[32m+[m[32m    return () => window.removeEventListener('resize', checkScreenSize);[m
[32m+[m[32m  }, []);[m
[32m+[m
[32m+[m[32m  // Group genres into columns (responsive based on screen size)[m
[32m+[m[32m  const getColumnCount = () => {[m
[32m+[m[32m    if (isMobile) return 2; // 2 columns on mobile[m
[32m+[m[32m    if (isTablet) return 3; // 3 columns on tablet[m
[32m+[m[32m    return 4; // 4 columns on desktop[m
[32m+[m[32m  };[m
[32m+[m[41m  [m
[32m+[m[32m  const columnCount = getColumnCount();[m
   const genresPerColumn = Math.ceil(genres.length / columnCount);[m
   [m
   const columns: Genre[][] = [];[m
[36m@@ -64,41 +89,39 @@[m [mconst GenreMenu: React.FC<GenreMenuProps> = ({ genres, onSelectGenre, selectedGe[m
       {/* Dropdown button */}[m
       <button[m
         onClick={toggleMenu}[m
[31m-        className="bg-gray-800 hover:bg-gray-700 text-white px-3 py-1.5 rounded-sm flex items-center justify-between min-w-[120px] text-sm"[m
[32m+[m[32m        className="bg-gray-800 hover:bg-gray-700 text-white px-4 py-2 rounded-sm flex items-center justify-between min-w-[140px] text-base"[m
       >[m
[31m-        <span>{selectedGenreName}</span>[m
[32m+[m[32m        <span className="truncate max-w-[150px]">{selectedGenreName}</span>[m
         <FaChevronDown className={`ml-2 text-xs transition-transform ${isOpen ? 'rotate-180' : ''}`} />[m
       </button>[m
 [m
       {/* Dropdown menu */}[m
       {isOpen && ([m
[31m-        <div className="absolute z-50 mt-1 bg-gray-800 rounded shadow-lg w-[640px] right-0 p-3 grid grid-cols-4 gap-2 text-sm">[m
[31m-          <div className="col-span-4 mb-1">[m
[32m+[m[32m        <div className="absolute z-50 mt-1 bg-gray-800 rounded shadow-lg w-screen max-w-[280px] sm:max-w-[380px] md:max-w-[560px] lg:max-w-[640px] right-0 p-4 overflow-y-auto" style={{ maxHeight: '80vh' }}>[m
[32m+[m[32m          <div className="mb-3">[m
             <button[m
               onClick={handleSelectAll}[m
[31m-              className={`w-full text-left py-1 px-2 rounded-sm hover:bg-gray-700 ${[m
[32m+[m[32m              className={`w-full text-left py-2 px-3 rounded hover:bg-gray-700 ${[m
                 selectedGenre === null ? 'bg-red-600 text-white' : 'text-white'[m
[31m-              } text-sm`}[m
[32m+[m[32m              } text-base font-medium`}[m
             >[m
               All Genres[m
             </button>[m
           </div>[m
 [m
[31m-          {columns.map((column, colIndex) => ([m
[31m-            <div key={colIndex} className="flex flex-col gap-1">[m
[31m-              {column.map(genre => ([m
[31m-                <button[m
[31m-                  key={genre.id}[m
[31m-                  onClick={() => handleSelectGenre(genre.id)}[m
[31m-                  className={`text-left py-1 px-2 rounded-sm hover:bg-gray-700 ${[m
[31m-                    selectedGenre === genre.id ? 'bg-red-600 text-white' : 'text-white'[m
[31m-                  } text-sm truncate`}[m
[31m-                >[m
[31m-                  {genre.name}[m
[31m-                </button>[m
[31m-              ))}[m
[31m-            </div>[m
[31m-          ))}[m
[32m+[m[32m          <div className={`grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-2`}>[m
[32m+[m[32m            {genres.map(genre => ([m
[32m+[m[32m              <button[m
[32m+[m[32m                key={genre.id}[m
[32m+[m[32m                onClick={() => handleSelectGenre(genre.id)}[m
[32m+[m[32m                className={`text-left py-2 px-3 rounded hover:bg-gray-700 ${[m
[32m+[m[32m                  selectedGenre === genre.id ? 'bg-red-600 text-white' : 'text-white'[m
[32m+[m[32m                } text-base truncate`}[m
[32m+[m[32m              >[m
[32m+[m[32m                {genre.name}[m
[32m+[m[32m              </button>[m
[32m+[m[32m            ))}[m
[32m+[m[32m          </div>[m
         </div>[m
       )}[m
     </div>[m
